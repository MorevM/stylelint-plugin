import { camelCase, stripIndent } from '@morev/utils';
import { rulesMeta } from '#modules/meta';
import { DOCUMENTATION_URL } from '#modules/shared';
import { getAutoGeneratedHeader, writeGeneratedFile } from '../utils';

/**
 * Generates a TypeScript schema describing the strongly-typed plugin configuration.
 *
 * @returns   Promise that resolves when the `rules-schema.ts` artifact is written.
 */
export const generateRulesSchema = async () => {
	const header = getAutoGeneratedHeader(import.meta.filename);

	const importLines = [
		`import type { RuleSetting } from '#modules/meta';`,
		...rulesMeta.map((meta) => {
			const alias = camelCase(meta.name);
			return `import type * as ${alias} from '#rules/${meta.scope}/${meta.name}/${meta.name}.types'`;
		}),
	].join('\n');

	const ruleBlocks = rulesMeta.map((meta) => {
		const alias = camelCase(meta.name);
		const ruleValue = `RuleSetting<${alias}.PrimaryOption, ${alias}.SecondaryOption>`;

		return stripIndent(`
			/**
			 * ${meta.description}
			 *
			 * @see ${DOCUMENTATION_URL}/rules/${meta.scope}/${meta.name}.html
			 */
			'${meta.id}': ${ruleValue};
		`);
	}).join('\n\n');

	const rulesSchema = `
		export type RulesSchema = {
			${ruleBlocks}
		};
	`;

	await writeGeneratedFile('rules-schema.ts', [header, importLines, rulesSchema]);
};
