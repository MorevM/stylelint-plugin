// THIS FILE IS AUTO-GENERATED BY `modules/meta/generate-rules-meta.ts`.
// DO NOT CHANGE IT DIRECTLY.

export const rulesMeta = [
	{
		id: '@morev/sass/no-unused-variables',
		scope: 'sass',
		name: 'no-unused-variables',
		description: 'Reports SASS variables that are declared but not used.',
		fixable: false,
		docsPath: 'src/rules/sass/no-unused-variables/no-unused-variables.docs.md',
		vitepressPath: '/rules/sass/no-unused-variables.md',
	},
	{
		id: '@morev/bem/selector-pattern',
		scope: 'bem',
		name: 'selector-pattern',
		description: 'Enforces naming patterns for BEM entities.',
		fixable: false,
		docsPath: 'src/rules/bem/selector-pattern/selector-pattern.docs.md',
		vitepressPath: '/rules/bem/selector-pattern.md',
	},
	{
		id: '@morev/bem/no-side-effects',
		scope: 'bem',
		name: 'no-side-effects',
		description: 'Disallows selectors that apply styles outside the scope of the current BEM block.',
		fixable: false,
		docsPath: 'src/rules/bem/no-side-effects/no-side-effects.docs.md',
		vitepressPath: '/rules/bem/no-side-effects.md',
	},
	{
		id: '@morev/bem/no-chained-entities',
		scope: 'bem',
		name: 'no-chained-entities',
		description: 'Disallows splitting BEM entities across multiple chained `&` selectors in SCSS.',
		fixable: false,
		docsPath: 'src/rules/bem/no-chained-entities/no-chained-entities.docs.md',
		vitepressPath: '/rules/bem/no-chained-entities.md',
	},
	{
		id: '@morev/bem/no-block-properties',
		scope: 'bem',
		name: 'no-block-properties',
		description: 'Prevents layout-affecting CSS properties within BEM block selectors.',
		fixable: false,
		docsPath: 'src/rules/bem/no-block-properties/no-block-properties.docs.md',
		vitepressPath: '/rules/bem/no-block-properties.md',
	},
	{
		id: '@morev/bem/match-file-name',
		scope: 'bem',
		name: 'match-file-name',
		description: 'Requires the file name to begin with the name of the BEM block it represents.',
		fixable: false,
		docsPath: 'src/rules/bem/match-file-name/match-file-name.docs.md',
		vitepressPath: '/rules/bem/match-file-name.md',
	},
	{
		id: '@morev/bem/block-variable',
		scope: 'bem',
		name: 'block-variable',
		description: "Requires the component's root selector to define a variable referencing the block name.",
		fixable: true,
		docsPath: 'src/rules/bem/block-variable/block-variable.docs.md',
		vitepressPath: '/rules/bem/block-variable.md',
	},
	{
		id: '@morev/base/no-selectors-in-at-rules',
		scope: 'base',
		name: 'no-selectors-in-at-rules',
		description: 'Disallows placing rules (selectors) inside at-rules.',
		fixable: false,
		docsPath: 'src/rules/base/no-selectors-in-at-rules/no-selectors-in-at-rules.docs.md',
		vitepressPath: '/rules/base/no-selectors-in-at-rules.md',
	},
] as const;

export const scopedRulesMeta = [
	{
		scope: 'base',
		label: 'üìè Base',
		description: 'General best practices that are not tied to any particular methodology or preprocessor',
		items: [
			{
				id: '@morev/base/no-selectors-in-at-rules',
				scope: 'base',
				name: 'no-selectors-in-at-rules',
				description: 'Disallows placing rules (selectors) inside at-rules.',
				fixable: false,
				docsPath: 'src/rules/base/no-selectors-in-at-rules/no-selectors-in-at-rules.docs.md',
				vitepressPath: '/rules/base/no-selectors-in-at-rules.md',
			},
		],
	},
	{
		scope: 'bem',
		label: 'üì¶ BEM',
		description: 'Rules specific to the <a href="https://en.bem.info/methodology/" target="_blank" rel="noopener noreferrer">BEM methodology</a>',
		items: [
			{
				id: '@morev/bem/block-variable',
				scope: 'bem',
				name: 'block-variable',
				description: "Requires the component's root selector to define a variable referencing the block name.",
				fixable: true,
				docsPath: 'src/rules/bem/block-variable/block-variable.docs.md',
				vitepressPath: '/rules/bem/block-variable.md',
			},
			{
				id: '@morev/bem/match-file-name',
				scope: 'bem',
				name: 'match-file-name',
				description: 'Requires the file name to begin with the name of the BEM block it represents.',
				fixable: false,
				docsPath: 'src/rules/bem/match-file-name/match-file-name.docs.md',
				vitepressPath: '/rules/bem/match-file-name.md',
			},
			{
				id: '@morev/bem/no-block-properties',
				scope: 'bem',
				name: 'no-block-properties',
				description: 'Prevents layout-affecting CSS properties within BEM block selectors.',
				fixable: false,
				docsPath: 'src/rules/bem/no-block-properties/no-block-properties.docs.md',
				vitepressPath: '/rules/bem/no-block-properties.md',
			},
			{
				id: '@morev/bem/no-chained-entities',
				scope: 'bem',
				name: 'no-chained-entities',
				description: 'Disallows splitting BEM entities across multiple chained `&` selectors in SCSS.',
				fixable: false,
				docsPath: 'src/rules/bem/no-chained-entities/no-chained-entities.docs.md',
				vitepressPath: '/rules/bem/no-chained-entities.md',
			},
			{
				id: '@morev/bem/no-side-effects',
				scope: 'bem',
				name: 'no-side-effects',
				description: 'Disallows selectors that apply styles outside the scope of the current BEM block.',
				fixable: false,
				docsPath: 'src/rules/bem/no-side-effects/no-side-effects.docs.md',
				vitepressPath: '/rules/bem/no-side-effects.md',
			},
			{
				id: '@morev/bem/selector-pattern',
				scope: 'bem',
				name: 'selector-pattern',
				description: 'Enforces naming patterns for BEM entities.',
				fixable: false,
				docsPath: 'src/rules/bem/selector-pattern/selector-pattern.docs.md',
				vitepressPath: '/rules/bem/selector-pattern.md',
			},
		],
	},
	{
		scope: 'sass',
		label: 'ü™Ñ SASS',
		description: 'Rules focused on SASS/SCSS syntax and features',
		items: [
			{
				id: '@morev/sass/no-unused-variables',
				scope: 'sass',
				name: 'no-unused-variables',
				description: 'Reports SASS variables that are declared but not used.',
				fixable: false,
				docsPath: 'src/rules/sass/no-unused-variables/no-unused-variables.docs.md',
				vitepressPath: '/rules/sass/no-unused-variables.md',
			},
		],
	},
] as const;

export type RuleScope = (typeof rulesMeta)[number]['scope'];
