import { mkdirSync, writeFileSync } from 'node:fs';
import { basename, resolve } from 'node:path';
import { stripIndent, toArray } from '@morev/utils';
import { ESLint } from 'eslint';

const GENERATED_DIRECTORY_PATH = resolve(import.meta.dirname, '__generated__');

// Cache a single ESLint instance to avoid repeated init cost.
let eslintInstance: ESLint | null = null;

/**
 * Runs ESLint with `--fix` on a given file.
 *
 * @param   filePath   Absolute path to the file that should be fixed by ESLint.
 *
 * @returns            A promise that resolves once ESLint has finished.
 */
const eslintFixFile = async (filePath: string) => {
	eslintInstance ??= new ESLint({ fix: true });
	const results = await eslintInstance.lintFiles([filePath]);
	await ESLint.outputFixes(results);
};

/**
 * Retrieves absolute path to the repository root.
 *
 * @returns   Absolute path to the repository root directory.
 */
export const getRootPath = () => {
	return resolve(import.meta.dirname, '../../../');
};

/**
 * Build a standard header for generated files for clarity.
 *
 * @param   filePath   Absolute path to the generator script.
 *
 * @returns            Header string that should be placed at the top of generated files.
 */
export const getAutoGeneratedHeader = (filePath: string) => stripIndent(`
  // THIS FILE IS AUTO-GENERATED BY \`modules/meta/${basename(filePath)}\`.
  // DO NOT CHANGE IT DIRECTLY.
`);

/**
 * Write a generated file into the `__generated__` directory and apply ESLint auto-fix to the file.
 *
 * @param   fileName       Name of the file to generate (relative to the `__generated__` directory).
 * @param   fileContents   String or array of strings representing the file contents.
 *
 * @returns                A promise that resolves once the file is written and formatted.
 */
export const writeGeneratedFile = async (
	fileName: string,
	fileContents: string | string[],
) => {
	const actualContents = toArray(fileContents).join('\n\n');
	const path = resolve(GENERATED_DIRECTORY_PATH, fileName);

	mkdirSync(GENERATED_DIRECTORY_PATH, { recursive: true });
	writeFileSync(path, actualContents);
	await eslintFixFile(path);
};
